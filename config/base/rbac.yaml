apiVersion: v1
kind: ServiceAccount
metadata:
  name: zeropod-node
  namespace: zeropod-system
---
# the installer needs to be able to install the zeropod runtimeclass
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: zeropod:runtimeclass-installer
rules:
  - apiGroups:
      - node.k8s.io
    resources:
      - runtimeclasses
    verbs:
      - create
      - delete
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: zeropod:runtimeclass-installer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: zeropod:runtimeclass-installer
subjects:
  - kind: ServiceAccount
    name: zeropod-node
    namespace: zeropod-system
---
# the manager needs to get/update pods for dynamic resource requests
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: zeropod:pod-updater
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: zeropod:pod-updater
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: zeropod:pod-updater
subjects:
  - kind: ServiceAccount
    name: zeropod-node
    namespace: zeropod-system
